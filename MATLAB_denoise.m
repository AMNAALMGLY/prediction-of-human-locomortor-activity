%this code used matlab filtering functions to denoise the data , we wanted to compare the effiency of python filtering fuction to Matlab ones.
% we used bandbass & notch butterworth filter along with wavelet denoising functions.

rawdataFileOfSubject=fullfile('C:\','Users','MUHAMMED ALI','Desktop','final year project','ENABL3S','AB156','Raw','AB156_Circuit');%path of the data
newpath=fullfile('C:\','Users','MUHAMMED ALI','Desktop','final year project','ENABL3S','AB156','filtered','AB156_Circuit');
for k = 1:50 
ModifiedrawdataFileOfSubject=[rawdataFileOfSubject '_' num2str(k,'%03d') '_raw.csv'];
table=readtable(ModifiedrawdataFileOfSubject);
table(:,'Waist_Gx') = [];
table(:,'Waist_Gy') = [];
table(:,'Waist_Gz') = [];
table(:,'Waist_Ax') = [];
table(:,'Waist_Ay') = [];
table(:,'Waist_Az') = [];
%firstemgdata=table(:,25);
filteredData=zeros(size(table));
emgWavelet=zeros(size(table));
emg_notch1=zeros(size(table));
emg_notch2=zeros(size(table));
emg_notch3=zeros(size(table));
emg_lowAndnotch=zeros(size(table));
for i=1:24
%signal=table2array(table(:,i));
filteredData(:,i)=table2array(table(:,i)); 
end
for i=25:38
signal=table2array(table(:,i));
%filteredData(:,i)=(func_denoise_db7l4(signal) ).' ; 
%emgWavelet(:,i)=func_denoise_db7l4(signal);
emgWavelet(:,i)=wden(signal,'sqtwolog','s','mln',4,'db7').';
notch1=notchFilter60hzButterworth;
notch2=notchFilter180hzButterworth;
notch3=notchFilter300hzButterworth;
low=lowPassButterworth350hz;
high=highPassButterworth20hz;
emg_notch1(:,i)=filter(notch1,emgWavelet(:,i));
emg_notch2(:,i)=filter(notch2,emg_notch1(:,i));
emg_notch3(:,i)=filter(notch3,emg_notch2(:,i));
emg_lowAndnotch(:,i)=filter(low,emg_notch3(:,i));

filteredData(:,i)=filter(high,emg_lowAndnotch(:,i));
end

for i=39:42
%signal=table2array(table(:,i));
filteredData(:,i)=table2array(table(:,i)); 

end
%table2=table2array(table);
%RMSData=zeros(size(table));
%%for i=1:40
 %RMSData(:,i)=RMS(table2(:,i),filteredData(:,i).');
%%%end
filteredData(:,43)=table2array(table(:,43)); %%mode 
filterdtable=array2table(filteredData,'VariableNames',table.Properties.VariableNames);
filterdDateFilename=[newpath '_' num2str(k,'%03d') '_filtered.csv'];
writetable(filterdtable,filterdDateFilename);
end

function sigDEN = func_denoise_db7l4(SIG)
% FUNC_DENOISE_DW1D Saved Denoising Process.
%   SIG: vector of data
%   -------------------
%   sigDEN: vector of denoised data

%  Auto-generated by Wavelet Toolbox on 25-Jul-2018 17:53:27

% Analysis parameters.
%---------------------
wname = 'db7';
level = 4;

% Denoising parameters.
%----------------------
% meth = 'sqtwolog';
% scal_or_alfa = mln;
sorh = 's';    % Specified soft or hard thresholding
thrSettings =  [...
    0.022889053484707 ; ...
    0.073508722387890 ; ...
    0.196256761943389 ; ...
    0.310164275580088   ...
    ];

% Denoise using CMDDENOISE.
%--------------------------
sigDEN = cmddenoise(SIG,wname,level,sorh,NaN,thrSettings);

end

function sigDEN = func_denoise_sym5(SIG)
% FUNC_DENOISE_DW1D Saved Denoising Process.
%   SIG: vector of data
%   -------------------
%   sigDEN: vector of denoised data

%  Auto-generated by Wavelet Toolbox on 28-Apr-2018 07:36:05

% Analysis parameters.
%---------------------
wname = 'sym5';
level = 4;

% Denoising parameters.
%----------------------
% meth = 'sqtwolog';
% scal_or_alfa = one;
sorh = 's';    % Specified soft or hard thresholding
thrSettings =  [...
    0.083050268158959 ; ...
    0.236009258359727 ; ...
    0.203687273240606 ; ...
    0.238037708983118   ...
    ];

% Denoise using CMDDENOISE.
%--------------------------
sigDEN = cmddenoise(SIG,wname,level,sorh,NaN,thrSettings);
end
function sigDEN = func2_denoise_db7l4(SIG)
% FUNC_DENOISE_DW1D Saved Denoising Process.
%   SIG: vector of data
%   -------------------
%   sigDEN: vector of denoised data

%  Auto-generated by Wavelet Toolbox on 28-Apr-2018 07:30:20

% Analysis parameters.
%---------------------
wname = 'db7';
level = 4;

% Denoising parameters.
%----------------------
% meth = 'sqtwolog';
% scal_or_alfa = one;
sorh = 's';    % Specified soft or hard thresholding
thrSettings =  [...
    0.075045781299635 ; ...
    0.131215609693649 ; ...
    0.213175178156045 ; ...
    0.239171507917073   ...
    ];

% Denoise using CMDDENOISE.
%--------------------------
sigDEN = cmddenoise(SIG,wname,level,sorh,NaN,thrSettings);
end
