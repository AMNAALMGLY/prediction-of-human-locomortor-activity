rawdataFileOfSubject=fullfile('C:\','Users','MUHAMMED ALI','Desktop','final year project','SEMG_DB1');
newpath=fullfile('C:\','Users','MUHAMMED ALI','Desktop','final year project','SEMG_DB1');
name_mar ='Nmar.txt';
name_pie ='Npie.txt';
name_sen ='Nsen.txt';

for k = 1:11
for j=1:3
        if j==1
            name=name_mar ;
        elseif j==2
             name=name_pie  ; 
        else
            name=name_sen;
        end
s=fullfile(rawdataFileOfSubject,'N_TXT',num2str(k,'%01d'));
ModifiedrawdataFileOfSubject=[s name ];
table=dlmread(ModifiedrawdataFileOfSubject,'\t',7,0);
%table=readtable(ModifiedraswdataFileOfSubject,'Delimiter',' ','ReadVariableNames',false,'HeaderLines',7);
%firstemgdata=table(:,25);
filteredData=zeros(size(table));
emgWavelet=zeros(size(table));
emg_notch1=zeros(size(table));
emg_notch2=zeros(size(table));
emg_notch3=zeros(size(table));
emg_lowAndnotch=zeros(size(table));
for i=1:4
signal=table(:,i);
%filteredData(:,i)=(func_denoise_db7l4(signal) ).' ; 
emgWavelet(:,i)=wden(signal,'sqtwolog','s','one',4,'db7').';
notch1=notchFilter60hzButterworth;
notch2=notchFilter180hzButterworth;
notch3=notchFilter300hzButterworth;
low=lowPassButterworth350hz;
high=highPassButterworth20hz;
emg_notch1(:,i)=filter(notch1,emgWavelet(:,i));
emg_notch2(:,i)=filter(notch2,emg_notch1(:,i));
emg_notch3(:,i)=filter(notch3,emg_notch2(:,i));
emg_lowAndnotch(:,i)=filter(low,emg_notch3(:,i));

filteredData(:,i)=filter(high,emg_lowAndnotch(:,i));
end

for i=4:5
%signal=table2array(table(:,i));
filteredData(:,i)=table(:,i); 

end

%filteredData(:,43)=table2array(table(:,43)); %%mode 
filterdtable=array2table(filteredData);
m=fullfile(newpath,'N_TXT2',num2str(k,'%01d'));
filterdDateFilename=[m name];
writetable(filterdtable,filterdDateFilename,'Delimiter','\t','WriteVariableNames',false);
end
end
function sigDEN = func_denoise_db7l4(SIG)
% FUNC_DENOISE_DW1D Saved Denoising Process.
%   SIG: vector of data
%   -------------------
%   sigDEN: vector of denoised data

%  Auto-generated by Wavelet Toolbox on 25-Jul-2018 17:53:27

% Analysis parameters.
%---------------------
wname = 'db7';
level = 4;

% Denoising parameters.
%----------------------
% meth = 'sqtwolog';
% scal_or_alfa = mln;
sorh = 's';    % Specified soft or hard thresholding
thrSettings =  [...
    0.022889053484707 ; ...
    0.073508722387890 ; ...
    0.196256761943389 ; ...
    0.310164275580088   ...
    ];

% Denoise using CMDDENOISE.
%--------------------------
sigDEN = cmddenoise(SIG,wname,level,sorh,NaN,thrSettings);

end

function sigDEN = func_denoise_sym5(SIG)
% FUNC_DENOISE_DW1D Saved Denoising Process.
%   SIG: vector of data
%   -------------------
%   sigDEN: vector of denoised data

%  Auto-generated by Wavelet Toolbox on 28-Apr-2018 07:36:05

% Analysis parameters.
%---------------------
wname = 'sym5';
level = 4;

% Denoising parameters.
%----------------------
% meth = 'sqtwolog';
% scal_or_alfa = one;
sorh = 's';    % Specified soft or hard thresholding
thrSettings =  [...
    0.083050268158959 ; ...
    0.236009258359727 ; ...
    0.203687273240606 ; ...
    0.238037708983118   ...
    ];

% Denoise using CMDDENOISE.
%--------------------------
sigDEN = cmddenoise(SIG,wname,level,sorh,NaN,thrSettings);
end
function sigDEN = func2_denoise_db7l4(SIG)
% FUNC_DENOISE_DW1D Saved Denoising Process.
%   SIG: vector of data
%   -------------------
%   sigDEN: vector of denoised data

%  Auto-generated by Wavelet Toolbox on 28-Apr-2018 07:30:20

% Analysis parameters.
%---------------------
wname = 'db7';
level = 4;

% Denoising parameters.
%----------------------
% meth = 'sqtwolog';
% scal_or_alfa = one;
sorh = 's';    % Specified soft or hard thresholding
thrSettings =  [...
    0.075045781299635 ; ...
    0.131215609693649 ; ...
    0.213175178156045 ; ...
    0.239171507917073   ...
    ];

% Denoise using CMDDENOISE.
%--------------------------
sigDEN = cmddenoise(SIG,wname,level,sorh,NaN,thrSettings);
end